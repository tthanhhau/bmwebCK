name: CI/CD Pipeline for Spring Boot

on:
  push:
    branches:
      - feature/integrate-cicd
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code từ repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Cài đặt JDK và build ứng dụng
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build project with Maven
      run: mvn clean package -DskipTests

    # 3. Build và push Docker image
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }} # Sử dụng Access Token thay cho mật khẩu

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/restaurant-web:latest
        docker build -t $IMAGE_NAME .
        docker push $IMAGE_NAME

    # 4. Deploy lên VPS qua SSH
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_KEY }}
        port: 22
        script: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/restaurant-web:latest

          echo "Pulling the latest Docker image..."
          docker pull $IMAGE_NAME

          echo "Stopping and removing the old container if exists..."
          docker stop restaurant-web || true
          docker rm restaurant-web || true
  
          echo "Running the new container..."
          docker run -d --name restaurant-web \
            --network host \
            -p 8080:8080 \
            --env DB_URL=jdbc:mysql://localhost:3306/restaurant \
            --env DB_USERNAME=root \
            --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --env CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} \
            --env CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }} \
            --env CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }} \
            --env VNP_TMNCODE=${{ secrets.VNP_TMNCODE }} \
            --env VNP_SECRETKEY=${{ secrets.VNP_SECRETKEY }} \
            --env VNP_RETURNURL=${{ secrets.VNP_RETURNURL }} \
            --env TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }} \
            --env TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }} \
            --env TWILIO_PHONE_NUMBER=${{ secrets.TWILIO_PHONE_NUMBER }} \
            $IMAGE_NAME
